#!/bin/sh

PACKAGE="mp"
VERSION="3.3.21w"
PACKAGE_URL=''


# Project type, use C to avoid checking for C++ compiler and stuff
# it's possible to specify other values, but the behavior will be "undefined"
# supported values: C, C++ ("" = C++)
PROJECT_TYPE=C

# Makefile
MK_SUBDIRS='data src'
MK_DISTCLEAN_FILES=''
MK_CHECK=''

add_env_help NCURSES

# configure the project using the commands provided
# by `configure` and other scripts and commands/tools
w_main_func()
{
	# GCC=yes if gcc has been detected

	# check required headers and exit on error
	w_check_headers_required stdio.h

	NCURSES_FOUND=
	if [ -n "$NCURSES_CFLAGS" ] || [ -n "$NCURSES_LIBS" ] ; then
		NCURSES_FOUND=1
	fi
	if [ ! "$NCURSES_FOUND" ] ; then
		find_pkgconfig  env='NCURSES' pc='ncursesw ncurses' required='false' #minver=
	fi
	if [ ! "$NCURSES_FOUND" ] ; then
		find_lib  env='NCURSES' headers='ncurses.h' libs='-lncursesw' required='false'
	fi
	if [ ! "$NCURSES_FOUND" ] ; then
		find_lib  env='NCURSES' headers='ncurses.h' libs='-lncurses' required='false'
	fi
	if [ ! "$NCURSES_FOUND" ] ; then
		find_lib  env='NCURSES' headers='curses.h' libs='-lcurses' required='false'
	fi
	#if [ ! "$NCURSES_FOUND" ] ; then
	#	find_customconfig NCURSES ncursesw6-config ncursesw5-config ncurses6-config ncurses6-config
	#fi
	if [ ! "$NCURSES_FOUND" ] ; then
		echo "NCURSES is required"
		exit 1
	fi
}

# function to run after performing all checks
w_aftercheck_func()
{
	printf ""
}

# function to run once everything is done, probably add stuff to config.h and config.mk
w_finish_func()
{
	printf ""
}
